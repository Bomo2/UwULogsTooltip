UWULogsData_Loaders = UWULogsData_Loaders or {}
UWULogsData_Loaders["6_3"] = function()
  local LibDeflate = LibStub("LibDeflate")
  local compressed = "rVxbk9NGFn7fX0HxTHX1_fKwDwsUuyGBUIGF3U3tg2xrbMUay5ElGJPKf095wmjk8ddSn0y_QFlQpz6dPt-5t9qy69vdk9_-9uTJz0_fb5p-Xxy6fvf0_0_-fvvw9Hh_-0twzvizb48Ot4-efrcsl23zZff07nn753-9-7kYyTn9rq_PHpwebW-fhGejR_td9-dD7y1T9u6ffn92L2f1JSLIQ0FKceYNELQ6ROQICwU55VhwQNDVOibIQUHGWSYCENRe0QR5qxgXQNB-HxMEdSQ4vz_gM0GL_TImSREl_VpHJEmBJHlnA5MKSDrE1B0xJGHx-dfb2KuJ9Fe7_ev2j5-fPm8Wi-OqqldlO5J8x6FgWfim_TkOSTKH4GEEawLjyNDiHCKeapRDGFAwjgV0FnEKQTlOBmY8kBNlEMajgmJBkwiEbZUb5pGtxvkjISDjNNMOCYrTByJS3DGLjj7KHignfvJx9mANScfEQ02PyfPjuhmramCNYfKbO55jjbr7mcwaHDC0EsxL9Mo01ngbDFNIUDzyCNohXNFcobWGORQvorSBGvJeWhaQuUdpY6CcYBST0NqjtInEeCeZ9UhQlDZYkA2SKaShKG3w0fsQGBITZY3EYrRm8iGLz0JOtW6rrmhXgDr-Pl2Zo46--5lMHcxyEyzTtICDBVnlGDKMOHOwGCGYRnZBjDdaGyZI8QbL4YGzQEvYsL0rxRQt3mAFCauZlUhQlDhQkPXCYw0dSJp20sQsaEvTkOVMP9TQGXPasli1zbovMXX4EE6mqWPufj6SOloKxmGaSqOOs9YzjXIaInekN8yjk6Bxx7nAiUEH4-HOMY4sjJireRkYLeZE9OMUs7RUDZuqUZ5pVOnSqONN8JG8hZaqBWEvo_KYOq_7Q7drmh1kjmWJRc6Q1SUTx2L1acM0jTgw2DonOC4qosTBOQTXAefwUeJgOd5w5tCLRYkDsz6vnWQmQ5GjXYTIcebgtE8ZR83WcP9D-Uj0ojEnWC-ZQ-GUxhxljWJuqsh5s9xXy22NiGMtC0PdP82cIalLZg7OLoN2TJGyLCzHaY6r36s1DY_kTCA5UYPHcqRwTJOyLOwQgg_MIsdMrOpNsIo5KChq8Lis0FZgKtPqCmctv6xMx4b6_bGtqgKYqQksJNbjQxx4ZGbknMDVJi2hCVIEZpHyiMWA8JrJDAmNtJwZ5L2ozScR6fJRc3hlFVYQMYe3MrApL_hiU1z3y-a6ODaoUXqqAL4JnjOxcPcz2cQ0QhyElMyjI42aGJYjZWCK1N-EETLe8ImaGI60xhhmaXUiFORc8HgaQwzZ8030j11fb5HnUWLIhmZnUMOs6qFd0FyG4yLg_jDNZVgtPTMo0tJcRpyhxOLFGGmZEEgQzWcYbTQzDy1-fJ6v2qI_0_pwnnxQyex5Du7gcaFEByGZJKX4WI7zklmkPppdGDLNCYdw-z9IkUTlaisp7z3uHRDNS0oHMvOzWNK3VdMfqu4ITEymJyuCPnPD0Zg7jhthNBOzilvmHt-6tNyJy0YY3cZUUIEpdKQ0G9PW2su2yfhE35bVsUGHeW9Ss4dJHwVBsMIZjV-a2JQz5PkpVp7SjlhpYTmn3l6GnpyWWjIN28c0hyFOxgUdD81fKKsiWyMHmoKsMEw9ZN_YSv_Vb7CNytQcJdfMRWpDjEWwJrTBepzr0KpvJ9y9131UajGXKb4u2_5Q1HV5jU7CDrXV7EnQW_jwzZUwDkc9oreI05PmLhTXKsf4S4U86auOtmppMUTCGPIXTEzDedzYxp4366JdoX6dvF_UmDUweqsbe8n4MgYxHDkB5sr0A_W39dHUfPplWazKFVKfGJa7ZtXn8qjPO4fX7ojak0JL5pGHo9FTWu4ZaU5AhEM7THla0YHbGER20jcAiXhosVx5bZmAA6ItRY4wQjE3lbm-P9afi92uuLkBBi_sMFyaNfhMnVNzWqGF3WKiwXsDlrfoBi8U18T2GJaTqZ0ioksLxJrmL2zPwvMyhpkMmVO0HUAkDnf3MykcHeu-K-srFB6FHtYPZ82d3sXFu4rGebxdSrR3ZWI1M9HenQp4oEXMv0yeGl5qqZmE7UOagQnYhzyP-1257Kpmhzp_4n5-MrsJHe3kElMnKT3jj98ok8IpvMFFDNomS-dPccVZhoadyJVRK-HB8uzYMj4V3XLT9F03EjsYhhh2v2YNI1O_Tp5WYuHon7h2FcuoiR0eIfDOB62Y1zZPThjvCNMiZNy8iHYqhLicW4zN63_rardG4yPBmR9aLjO2FW0fEtv7KpY3Efv7wojLSfH4rd9UbbGs4bUTwYeF5tn3jrakiHnV7JDvRdG2x-ty13wBiEPqBpmkN24i-S13jNMW9ZEcpZ0fbis8Jt7LmDOhsU7g7R6iS_dsav7y_kszxjSsAQ5t6tlDzNYcMRLPuolrIkJiV0WsUVyeFrswwuDqleg6pZSSSdirJ-6r8si6yYGmIOsua7ixZf2331a7Zlt0yJt7ljjXk_Hm0ZYC1ysFrgCcMaG_uoIe2A8xYBZspsLf-aCnFxGft31XXjXtskS9Cpc8NpUhE-LTEtOUn3lbrKtFcdjA1RA3TEpn74hlqiec0eoywRoD_lRWqx5iTb3OJjJBVacLAVPZw4_7_bGCUI1JxBrNxokLN0r4y12_M7UWq35TbiFaLRPRZhoPOxHkcKcXon3V3NwcD12xgHilTsSbaVTouHCX66NnPqwu9keIladaQqaczHotpzP9n053dxbVAcMViXCj2QdtB_q0o2oeP2mTxuC76tS2QMhxVUbE94Fot5EF_XYYlCPhrebzILz6pWrR-ogdWoOzNhFNGYgplz19MUJO8e2n4uvX4heI1rtEtPScAc__Zxdz_tEuN6vyc1VDvKndXpUpY7A6iMvvQ4zxfrzeQ6SpW4c6U64gtbE5xicqCMX4lDn959DhW1mWGZH40pmyDquEYW6Kqv_etWVd7rpqt4aIlUpEnKkTaIXml9OpMeIfiuuqxNafuvWjo6kHcROYW3659TMG-7LZ19UOghWpYDPlHSZYPb1m8bra3UCoPCRCjaYd1K0jWN6eucF6Xexg2mHS79tnanoY58FdwzHaV_32ULQFRqsT0UYDIrGP6Yy7zJLOwvemPG4wWJ9qCdF4SGzewo7-mSFc7_uuWDUR7bpUwJkCorFCT4eH74u-rrpDg23XJkYIkyksGq2GLg423bKqvsKOimFaJYLNFM6MtIqJKbQfmptquSrW6wji1AhhMoUzw71jbqrsf1cs6qY8LJsFMmDNvE9EnClMaKfsMKOBiJ8Xi2O3acsS4nWJcDNVqNpYMXnN7W35udw11xBrarZsooGCvhMCdi_P4BbbTQfBmlRDyFU4aa315TcsxmA_VsVuWayb1WFTYcwyEXOm8kkrby7Xns-9b91cXa2bVXnE9qt0IuRMAUPL0wcPpiqol31ZHyBWkdjEtJmChebKTKdlHzZlsToi36uSv7tnM0UL5U1gdopsr8tFASs1lfz5DHqcwFvrFl1nHmN9X5bdpuggWJtIM5up5arMaWd2KuF992VX3uzb8nCAgHUiyWymoIY3KM78br_F913TscaLH-K9vVmwr_p101WfMV6ZijdT9eM4dVkGihFSWrwbRhzVSiGZmMq4fmia7aLcVLtVfwM1yFPJn2klXgYvL789NIb86SsAKofJ9izQTBNNaZWYLh3_2dd1D7HaVKyZ4qrQXA39tkfYpdUcD-yJt24Cn-6Zv2i-NtsKqk4lFi0uU5iX0nM25d2fN2116DaLusCXcpgIiYijoZ64UytON1mmwuebZXG9h0WhZMIlos1UFErBzeWG0hjth6K5rjDYVOfk4rGetlNJ_OYpJqPgkaul5E83TuefLzZlsT_symILlCeGW1KzysuUd4ggw_Qi7nc3qDvMk1M6F43i5FY241Mm-a4tth38UgxnRieCzRQwjTQDaS_A_v4H"
  local decoded = LibDeflate:DecodeForPrint(compressed)
  local decompressed = LibDeflate:DecompressDeflate(decoded)
  UWULogsData = UWULogsData or {}
  UWULogsData[6] = UWULogsData[6] or {}
  UWULogsData[6][3] = assert(loadstring("return "..decompressed))()
end
